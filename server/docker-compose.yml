version: '3'
services:
  emqx1:
    image: emqx:5.0.26
    container_name: emqx1
    environment:
    - TZ=Africa/Johannesburg
    - "EMQX_NODE_NAME=emqx@node1.emqx.io"
    - "EMQX_CLUSTER__DISCOVERY_STRATEGY=static"
    - "EMQX_CLUSTER__STATIC__SEEDS=[emqx@node1.emqx.io,emqx@node2.emqx.io]"
    healthcheck:
      test: ["CMD", "/opt/emqx/bin/emqx_ctl", "status"]
      interval: 5s
      timeout: 25s
      retries: 5
    restart: unless-stopped
    networks:
      emqx-bridge:
        aliases:
        - node1.emqx.io
    ports:
      - 1883:1883
      - 8083:8083
      - 8084:8084
      - 8883:8883
      - 18083:18083 
    volumes:
      - emqx1_data:/opt/emqx/data

  emqx2:
    image: emqx:5.0.26
    container_name: emqx2
    environment:
    - TZ=Africa/Johannesburg
    - "EMQX_NODE_NAME=emqx@node2.emqx.io"
    - "EMQX_CLUSTER__DISCOVERY_STRATEGY=static"
    - "EMQX_CLUSTER__STATIC__SEEDS=[emqx@node1.emqx.io,emqx@node2.emqx.io]"
    healthcheck:
      test: ["CMD", "/opt/emqx/bin/emqx_ctl", "status"]
      interval: 5s
      timeout: 25s
      retries: 5
    restart: unless-stopped
    networks:
      emqx-bridge:
        aliases:
        - node2.emqx.io
    volumes:
      - emqx2_data:/opt/emqx/data


  nginx_proxy:
    build:
      context: .
      dockerfile: ./apps/nginx_proxy/Dockerfile
    ports:
      - "80:80"
      - "443:443"
      - "2202:2202"
    volumes:
      - ./apps/nginx_proxy/nginx.conf:/etc/nginx/nginx.conf
      - ./log/nginx:/var/log/nginx
    restart: unless-stopped
    depends_on:
      # - fb_notifications_service
      - payments_service
      - store_service
      - verify_id_service
      - cdn_service
      - mrz_reader_service
      - mrz_decoder_service
    networks:
      - local_bridge
  
  # fb_notifications_service:
  #   build:
  #     context: .
  #     dockerfile: ./apps/notifications/Dockerfile
  #   volumes:
  #     - ./log/notifications:/app/log/notifications
  #   environment:
  #     - PORT=${FB_NOTIF_PORT}
  #     - NODE_ENV=production
  #     - FB_NOTIF_PORT=${FB_NOTIF_PORT}
  #     - FB_SERVER_TOKEN=${FB_SERVER_TOKEN}
  #     # - NODE_DEBUG=http
  #   restart: unless-stopped
  #   networks:
  #     - local_bridge

  
  payments_service:
    build:
      context: .
      dockerfile: ./apps/payments/Dockerfile
    volumes:
      - ./log/payments:/app/log/payments
    environment:
      - TZ=Africa/Johannesburg
      - PORT=${PAYMENTS_PORT}
      - NODE_ENV=production
      - PAYMENTS_PORT=${PAYMENTS_PORT}
      - PAYMENTS_TOKEN=${PAYMENTS_TOKEN}
      - PAYMENT_EVENTS_SECRET=${PAYMENT_EVENTS_SECRET}
      # - NODE_DEBUG=http
      - FB_SERVER_TOKEN=${FB_SERVER_TOKEN}
    restart: unless-stopped
    networks:
      - local_bridge

  
  store_service:
    build:
      context: .
      dockerfile: ./apps/store/Dockerfile
    volumes:
      - ./apps/store/db:/app/apps/store/db
      - ./log/store:/app/log/store
    environment:
      - PORT=${STORE_PORT}
      - NODE_ENV=production
      - TZ=Africa/Johannesburg
      - STORE_PORT=${STORE_PORT}
    restart: unless-stopped
    networks:
      - local_bridge

    
  cdn_service:
    build:
      context: .
      dockerfile: ./apps/cdn/Dockerfile
    volumes:
      - ./apps/cdn/root:/app/apps/cdn/root
      - ./apps/cdn/static:/app/apps/cdn/static
      - ./log/cdn:/app/log/cdn
    environment:
      - PORT=${CDN_PORT}
      - TZ=Africa/Johannesburg
    restart: unless-stopped
    networks:
      - local_bridge

  
  verify_id_service:
    build:
      context: .
      dockerfile: ./apps/verifyId/Dockerfile
    volumes:
      - ./log/verify_id:/app/log/verify_id
    environment:
      - PORT=${VERIFYID_PORT}
      - NODE_ENV=production
      - VERIFYID_PORT=${VERIFYID_PORT}
      - TZ=Africa/Johannesburg
    restart: unless-stopped
    networks:
      - local_bridge

  whatsapp_messaging_service:
    image: makhosi/whatsapp_hook:3.3.minimal
    environment:
      - TZ=Africa/Johannesburg
    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - ./apps/whatsapp_messaging/db:/app/db
    restart: unless-stopped
    networks:
      - local_bridge

  mrz_decoder_service:
    image: makhosi/mrz_decoder:1.0.2
    ports:
      - "5694:5694"
    volumes:
      - ./apps/image_transcoder/pkgs/mrz_decoder/:/app/
    restart: unless-stopped
    networks:
      - local_bridge

  mrz_reader_service:
    image: makhosi/mrz_reader:1.0.1
    ports:
      - "5693:5693"
    volumes:
      - ./apps/image_transcoder/pkgs/mrz_reader/:/app/
    restart: unless-stopped
    networks:
      - local_bridge

  app_verified_io_service:
    image: makhosi/app_verified_io:1.0.12
    tty: true
    environment:
      APP_NAME: ${VERIFIEDWEB_APP_NAME}
      APP_URL: ${VERIFIEDWEB_APP_URL}
      APP_ENV: ${VERIFIEDWEB_APP_ENV}
      APP_DEBUG: ${VERIFIEDWEB_APP_DEBUG}
      APP_KEY: ${VERIFIEDWEB_APP_KEY}
      DB_CONNECTION: ${VERIFIEDWEB_DB_CONNECTION}
      DB_HOST: 'mysql_db_service'
      DB_PORT: ${VERIFIEDWEB_DB_PORT}
      DB_DATABASE: ${VERIFIEDWEB_DB_DATABASE}
      DB_USERNAME: ${VERIFIEDWEB_DB_USERNAME}
      DB_PASSWORD: ${VERIFIEDWEB_DB_PASSWORD}
      MAIL_HOST: ${VERIFIEDWEB_MAIL_HOST}
      MAIL_PORT: ${VERIFIEDWEB_MAIL_PORT}
      MAIL_USERNAME: ${VERIFIEDWEB_MAIL_USERNAME}
      MAIL_PASSWORD: ${VERIFIEDWEB_MAIL_PASSWORD}
      MAIL_FROM_ADDRESS: ${VERIFIEDWEB_MAIL_FROM_ADDRESS}
      MAIL_FROM_NAME: ${VERIFIEDWEB_MAIL_FROM_NAME}
      TZ: Africa/Johannesburg
    ports:
      - "9000:80"
    # volumes:
      # - ./apps/app_verified_io:/var/www
    restart: unless-stopped
    networks:
      - local_bridge  

  mysql_db_service:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${VERIFIEDWEB_DB_DATABASE}
      MYSQL_USER: ${VERIFIEDWEB_DB_USERNAME}
      MYSQL_PASSWORD: ${VERIFIEDWEB_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${VERIFIEDWEB_DB_PASSWORD}
    volumes:
      - ./apps/mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - local_bridge  

volumes:
  emqx1_data:
    driver: local
  emqx2_data:
    driver: local


networks:
  emqx-bridge:
    driver: bridge
  local_bridge:
    driver: bridge
